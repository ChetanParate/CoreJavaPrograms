AWSTemplateFormatVersion: 2010-09-09
Description: An example CloudFormation template for Fargate.
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  AppSubnetA:
    Type: AWS::EC2::Subnet::Id
  AppSubnetB:
    Type: AWS::EC2::Subnet::Id
  ElbSubnetA:
    Type: AWS::EC2::Subnet::Id
  ElbSubnetB:
    Type: AWS::EC2::Subnet::Id
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  Certificate:
    Type: String
    # Update with the certificate ARN from Certificate Manager, which must exist in the same region - this cert is per appliation.
    Default: 'arn:aws:acm:us-east-2:873806072084:certificate/630006e1-2a93-4ccf-a8ba-329a8021faff'
  Image:
    Type: String
    # Update with the Docker image. "You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag)."
    Default: 873806072084.dkr.ecr.us-east-2.amazonaws.com/shconline-checkout-crsp-service:master-ba2adb0
  XrayImage:
    Type: String
    # Update with the Docker image. "You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag)."
    Default: 873806072084.dkr.ecr.us-east-2.amazonaws.com/shconline-checkout-xray:xray-latest
  ServiceName:
    Type: String
    # update with the name of the service 
    Default: shconline-checkout-crsp
  ContainerPort:
    #Backend container listening port
    Type: Number
    Default: 8443
  XRayContainerPort:
    Type: Number
    Default: 2000
  LoadBalancerPort:
    Type: Number
    Default: 443
  HealthCheckPath:
    Type: String
    Default: /crsp/api/cart/healthstatus
  HostedZoneName:
    Type: String
    Default: nonprod.online.oh.transformco.com
  Subdomain:
    Type: String
    Default: qa4.crsp
  #TaskRole
  TaskRole:
    Type: String
    Default: arn:aws:iam::873806072084:role/shconline-checkout-SR-ECSTasks
  #Execution Role
  ExecutionRole:
    Type: String
    Default: arn:aws:iam::873806072084:role/shconline-checkout-SR-ECSTasks 
  # for autoscaling
  MinContainers:
    Type: Number
    Default: 1
  # for autoscaling
  MaxContainers:
    Type: Number
    Default: 1
  Env:
    Type: String
    Default: qa1
  XrayTracingName:
    Type: String
    Default: shconline-checkout-crsp-qa1

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Join ['', [!Ref ServiceName, Cluster]]
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    # Makes sure the log group is created before it is used.
    DependsOn: LogGroup
    Properties:
      # Name of the task definition. Subsequent versions of the task definition are grouped together under this name.
      Family: !Join ['', [!Ref ServiceName, TaskDefn]]
      # awsvpc is required for Fargate
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
      # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
      # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
      # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
      # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
      Cpu: 1024
      # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
      # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
      # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
      # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
      # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
      Memory: 2GB
      ExecutionRoleArn: !Ref ExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Image: !Ref Image
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Environment:
            - Name: ENV
              Value: !Ref Env
            - Name: IMAGE_TAG
              Value: !Ref Image
            - Name: AWS_XRAY_TRACING_NAME
              Value: !Ref XrayTracingName
          # Send logs to CloudWatch Logs
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
        - Name: xrayDaemon
          Image: !Ref XrayImage
          Cpu: "32"
          Memory: "128"
          PortMappings:
            - ContainerPort: !Ref XRayContainerPort
              Protocol: udp
          Essential: true
          EntryPoint:
            - "/usr/bin/xray"
            - "-b"
            - "0.0.0.0:2000" 
            - "-o"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref LogGroup
              awslogs-stream-prefix: ecs
  Service:
    Type: AWS::ECS::Service
    # This dependency is needed so that the load balancer is setup correctly in time
    DependsOn:
      - ListenerHTTPS
    Properties: 
      ServiceName: !Ref ServiceName
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DeploymentConfiguration:
        MinimumHealthyPercent: 100
        MaximumPercent: 200
      DesiredCount: 1
      # This may need to be adjusted if the container takes a while to start up
      HealthCheckGracePeriodSeconds: 300
      LaunchType: FARGATE
      NetworkConfiguration: 
        AwsvpcConfiguration:
          # change to DISABLED if you're using private subnets that have access to a NAT gateway
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref AppSubnetA
            - !Ref AppSubnetB
          SecurityGroups:
            - !Ref ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: !Ref ServiceName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      # will look for a 200 status code by default unless specified otherwise
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckTimeoutSeconds: 15
      UnhealthyThresholdCount: 5
      HealthyThresholdCount: 2
      Name: !Join ['', [!Ref ServiceName, -TG]]
      Port: !Ref ContainerPort
      Protocol: HTTPS
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60 # default is 300
      TargetType: ip
      VpcId: !Ref VPC
  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: !Ref LoadBalancerPort
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref Certificate
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        # this is the default, but is specified here in case it needs to be changed
        - Key: idle_timeout.timeout_seconds
          Value: 60
      Name: !Join ['', [!Ref ServiceName, ALB]]
      # "internal" is also an option
      Scheme: internal
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets:
        - !Ref ElbSubnetA
        - !Ref ElbSubnetB
      Tags: 
        - Key: "APPACCESS"
          Value: "shconline-checkout"
        - Key: "GROUP"
          Value: "shconline-checkout"
        - Key: "COSTCENTER"
          Value: "38089"
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Join ['', [!Ref HostedZoneName, .]]
      Name: !Join ['', [!Ref Subdomain, ., !Ref HostedZoneName, .]]
      Type: A
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['', [/ecs/, !Ref ServiceName, TaskDefn]]
Outputs:
  Endpoint:
    Description: Endpoint
    Value: !Join ['', ['https://', !Ref DNSRecord]]